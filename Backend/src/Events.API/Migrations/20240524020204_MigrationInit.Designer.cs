// <auto-generated />
using System;
using System.Collections.Generic;
using Events.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Events.API.Migrations
{
    [DbContext(typeof(EventsDbContext))]
    [Migration("20240524020204_MigrationInit")]
    partial class MigrationInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Events.API.Data.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EvenementId")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Events.API.Data.Models.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("text");

                    b.Property<List<int>>("CategoriesIds")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("NomOrganisateur")
                        .HasColumnType("text");

                    b.Property<decimal>("PrixBillet")
                        .HasColumnType("numeric");

                    b.Property<string>("Titre")
                        .HasColumnType("text");

                    b.Property<decimal>("TotaleVentes")
                        .HasColumnType("numeric");

                    b.Property<int>("VilleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VilleId");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("Events.API.Data.Models.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseCourriel")
                        .HasColumnType("text");

                    b.Property<bool>("EstConfirmee")
                        .HasColumnType("boolean");

                    b.Property<int>("EvenementId")
                        .HasColumnType("integer");

                    b.Property<int>("NbPlaces")
                        .HasColumnType("integer");

                    b.Property<string>("NomParticipant")
                        .HasColumnType("text");

                    b.Property<string>("PrenomParticipant")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("Events.API.Data.Models.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NbEvenements")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<int?>("Region")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("Events.API.Data.Models.Categorie", b =>
                {
                    b.HasOne("Events.API.Data.Models.Evenement", null)
                        .WithMany("Categories")
                        .HasForeignKey("EvenementId");
                });

            modelBuilder.Entity("Events.API.Data.Models.Evenement", b =>
                {
                    b.HasOne("Events.API.Data.Models.Ville", "Ville")
                        .WithMany()
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ville");
                });

            modelBuilder.Entity("Events.API.Data.Models.Participation", b =>
                {
                    b.HasOne("Events.API.Data.Models.Evenement", "Evenement")
                        .WithMany("Participations")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");
                });

            modelBuilder.Entity("Events.API.Data.Models.Evenement", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
